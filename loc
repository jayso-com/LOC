-- List of valid keys (this can be extended infinitely)
local validKeys = {
    "KEYAUTH-z4LEKC-jG5QlJ-R7Vpgi-VReWQg-370fSE-5IDGQA",  -- Example of a predefined key (you can add more)
    "KEYAUTH-z35gjx-RhS8Qg-5esIXU-3h22KT-LFWojl-whozUZ",  -- Example of a second key
    "KEYAUTH-W3XpRY-zElM4v-Zr8Jo1-EnvcEl-Vgaz0i-5hd8x8",    -- Example of a third key
    "KEYAUTH-r2t1ov-dFarEr-7faxzx-EOTkgf-3XoIFr-9WzZU3",    -- Example of a third key
    "KEYAUTH-LiWg5p-lQLd4D-6i7ZoB-86RChz-HyLb77-GvrQRz",    -- Example of a third key
    "KEYAUTH-j8Wfil-UOeiOy-kxFHWC-Wsvhby-3kuBHX-KOjepb",    -- Example of a third key
    "KEYAUTH-iy5uc4-etQwsx-WiUEUI-qRqUGz-TxRrMy-vz4wZS",    -- Example of a third key
    "KEYAUTH-eFn6Q4-vtnACs-eypudZ-uetNvN-W0tshh-LXv6y5",    -- Example of a third key
    "KEYAUTH-4xxS7L-BmrNLI-bTZuvI-dLkHFf-Hl0WaC-VfVty6",    -- Example of a third key
    "KEYAUTH-0vNkd7-soHw3X-qjsic9-Vdt8jP-RGV3xd-5iybY5",    -- Example of a third key
    -- You can continue to add more keys as needed
}

-- Variable to track if the key has been entered correctly
local keyEntered = false

-- Create the UI
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ScreenGui to hold the UI components
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.Name = "KeyEntryGui"

-- TextBox for entering the key
local textBox = Instance.new("TextBox")
textBox.Parent = screenGui
textBox.Size = UDim2.new(0, 400, 0, 50)
textBox.Position = UDim2.new(0.5, -200, 0.5, -25)
textBox.PlaceholderText = "Enter access key"
textBox.TextSize = 24
textBox.ClearTextOnFocus = true

-- Button to submit the key
local submitButton = Instance.new("TextButton")
submitButton.Parent = screenGui
submitButton.Size = UDim2.new(0, 400, 0, 50)
submitButton.Position = UDim2.new(0.5, -200, 0.5, 40)
submitButton.Text = "Submit"
submitButton.TextSize = 24
submitButton.BackgroundColor3 = Color3.fromRGB(44, 120, 224)

-- TextLabel to show messages (like error or success)
local messageLabel = Instance.new("TextLabel")
messageLabel.Parent = screenGui
messageLabel.Size = UDim2.new(0, 400, 0, 30)
messageLabel.Position = UDim2.new(0.5, -200, 0.5, 100)
messageLabel.Text = ""
messageLabel.TextSize = 20
messageLabel.TextColor3 = Color3.fromRGB(255, 0, 0)  -- Red for error messages

-- Function to check if the entered key matches any valid key in the list
local function checkKey(inputKey)
    -- Check if the inputKey is in the validKeys list
    for _, key in pairs(validKeys) do
        if inputKey == key then
            keyEntered = true
            messageLabel.TextColor3 = Color3.fromRGB(0, 255, 0)  -- Green for success
            messageLabel.Text = "Correct key entered. Access granted!"
            submitButton.Text = "Access Granted!"  -- Change button text after access is granted
            -- Run the script once the key is entered correctly
            loadstring(game:HttpGet("https://raw.githubusercontent.com/jayso-com/UF-script/refs/heads/main/loc"))()

            -- Destroy the UI after key is correct
            screenGui:Destroy()
            return
        end
    end

    -- If no key matches, display an error message
    keyEntered = false
    messageLabel.TextColor3 = Color3.fromRGB(255, 0, 0)  -- Red for error
    messageLabel.Text = "Incorrect key. Try again."
end

-- Event for the submit button
submitButton.MouseButton1Click:Connect(function()
    local userInput = textBox.Text
    checkKey(userInput)  -- Check if the entered key is correct
end)

-- Optional: Clear the text field if clicked
textBox.Focused:Connect(function()
    messageLabel.Text = ""  -- Clear the message when the user starts typing
end)

-- You can dynamically add more keys to the validKeys table
table.insert(validKeys, "NewDynamicKey123")  -- Example of adding a new key
table.insert(validKeys, "AnotherNewKey456")  -- Example of adding another key
-- Continue adding as many keys as you want in the validKeys table
